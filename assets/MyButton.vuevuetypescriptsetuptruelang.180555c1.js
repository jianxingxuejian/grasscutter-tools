import{c as U,d as T,e as I,j as V,g,i as K,A as w,be as S,h as p,aS as q,q as D,bu as b,m as L,bv as W,a as $,v as m,t as j,u as M,r as A,p as G,s as H,Z as J,bw as Z,B,bx as Q,C as h,M as P,J as u,I as z,aR as k,K as C,by as v,E as x,bg as _,bz as X}from"./index.7eac0f46.js";import{h as R,b as Y,p as ee,_ as te}from"./Tooltip.c3f40614.js";const y=new Map,N=2e3;function pe(e,n){var s;y.has(e)||(y.set(e,n),(s=window.$message)==null||s.error(n,{duration:N}),setTimeout(()=>{y.delete(e)},N))}function oe(e,n){var s,o;if(!!e)if(typeof e=="object"){const{code:l,msg:a}=e;l===200&&((s=window.$message)==null||s.success(a))}else e===200&&n&&((o=window.$message)==null||o.success(n))}const E=U("n-popconfirm"),F={positiveText:String,negativeText:String,showIcon:{type:Boolean,default:!0},onPositiveClick:{type:Function,required:!0},onNegativeClick:{type:Function,required:!0}},O=D(F),ne=T({name:"NPopconfirmPanel",props:F,setup(e){const{localeRef:n}=R("Popconfirm"),{inlineThemeDisabled:s}=I(),{mergedClsPrefixRef:o,mergedThemeRef:l,props:a}=V(E),f=g(()=>{const{common:{cubicBezierEaseInOut:i},self:{fontSize:c,iconSize:d,iconColor:r}}=l.value;return{"--n-bezier":i,"--n-font-size":c,"--n-icon-size":d,"--n-icon-color":r}}),t=s?K("popconfirm-panel",void 0,f,a):void 0;return Object.assign(Object.assign({},R("Popconfirm")),{mergedClsPrefix:o,cssVars:s?void 0:f,localizedPositiveText:g(()=>e.positiveText||n.value.positiveText),localizedNegativeText:g(()=>e.negativeText||n.value.negativeText),positiveButtonProps:w(a,"positiveButtonProps"),negativeButtonProps:w(a,"negativeButtonProps"),handlePositiveClick(i){e.onPositiveClick(i)},handleNegativeClick(i){e.onNegativeClick(i)},themeClass:t==null?void 0:t.themeClass,onRender:t==null?void 0:t.onRender})},render(){var e;const{mergedClsPrefix:n,showIcon:s,$slots:o}=this,l=S(o.action,()=>this.negativeText===null&&this.positiveText===null?[]:[this.negativeText!==null&&p(b,Object.assign({size:"small",onClick:this.handleNegativeClick},this.negativeButtonProps),{default:()=>this.localizedNegativeText}),this.positiveText!==null&&p(b,Object.assign({size:"small",type:"primary",onClick:this.handlePositiveClick},this.positiveButtonProps),{default:()=>this.localizedPositiveText})]);return(e=this.onRender)===null||e===void 0||e.call(this),p("div",{class:[`${n}-popconfirm__panel`,this.themeClass],style:this.cssVars},q(o.default,a=>s||a?p("div",{class:`${n}-popconfirm__body`},s?p("div",{class:`${n}-popconfirm__icon`},S(o.icon,()=>[p(L,{clsPrefix:n},{default:()=>p(W,null)})])):null,a):null),l?p("div",{class:[`${n}-popconfirm__action`]},l):null)}}),se=$("popconfirm",[m("body",`
 font-size: var(--n-font-size);
 display: flex;
 align-items: center;
 flex-wrap: nowrap;
 position: relative;
 `,[m("icon",`
 display: flex;
 font-size: var(--n-icon-size);
 color: var(--n-icon-color);
 transition: color .3s var(--n-bezier);
 margin: 0 8px 0 0;
 `)]),m("action",`
 display: flex;
 justify-content: flex-end;
 `,[j("&:not(:first-child)","margin-top: 8px"),$("button",[j("&:not(:last-child)","margin-right: 8px;")])])]),ie=Object.assign(Object.assign(Object.assign({},M.props),ee),{positiveText:String,negativeText:String,showIcon:{type:Boolean,default:!0},trigger:{type:String,default:"click"},positiveButtonProps:Object,negativeButtonProps:Object,onPositiveClick:Function,onNegativeClick:Function}),ae=T({name:"Popconfirm",props:ie,__popover__:!0,setup(e){const{mergedClsPrefixRef:n}=I(),s=M("Popconfirm","-popconfirm",se,Z,e,n),o=A(null);function l(t){const{onPositiveClick:i,"onUpdate:show":c}=e;Promise.resolve(i?i(t):!0).then(d=>{var r;d!==!1&&((r=o.value)===null||r===void 0||r.setShow(!1),c&&B(c,!1))})}function a(t){const{onNegativeClick:i,"onUpdate:show":c}=e;Promise.resolve(i?i(t):!0).then(d=>{var r;d!==!1&&((r=o.value)===null||r===void 0||r.setShow(!1),c&&B(c,!1))})}return G(E,{mergedThemeRef:s,mergedClsPrefixRef:n,props:e}),Object.assign(Object.assign({},{setShow(t){var i;(i=o.value)===null||i===void 0||i.setShow(t)},syncPosition(){var t;(t=o.value)===null||t===void 0||t.syncPosition()}}),{mergedTheme:s,popoverInstRef:o,handlePositiveClick:l,handleNegativeClick:a})},render(){const{$slots:e,$props:n,mergedTheme:s}=this;return p(Y,J(n,O,{theme:s.peers.Popover,themeOverrides:s.peerOverrides.Popover,internalExtraClass:["popconfirm"],ref:"popoverInstRef"}),{trigger:e.activator||e.trigger,default:()=>{const o=H(n,O);return p(ne,Object.assign(Object.assign({},o),{onPositiveClick:this.handlePositiveClick,onNegativeClick:this.handleNegativeClick}),e)}})}}),le={class:"text-4"},ue=T({__name:"MyButton",props:{text:null,onClickAsync:null,onClick:null},setup(e,{expose:n}){const s=e;n({clickAsync:l});let o;Q().default&&(o=A(!1));async function l(){if(!s.onClickAsync)return;let t;o&&(t=setTimeout(()=>{o.value=!0},20));try{const i=await s.onClickAsync();oe(i)}catch{}finally{o&&(o.value?o.value=!1:clearTimeout(t))}}const a=X(l,1e3);async function f(){s.onClick&&s.onClick(),a()}return(t,i)=>{const c=b,d=ae,r=te;return t.$slots.popconfirm?(h(),P(d,{key:0,"show-icon":!1,onPositiveClick:f},{trigger:u(()=>[z(c,k({text:!e.text,loading:C(o)},t.$attrs),{icon:u(()=>[v(t.$slots,"default")]),default:u(()=>[x("span",null,_(e.text),1)]),_:3},16,["text","loading"])]),default:u(()=>[v(t.$slots,"popconfirm")]),_:3})):t.$slots.tooltip?(h(),P(r,{key:1},{trigger:u(()=>[z(c,k({text:!e.text,loading:C(o)},t.$attrs,{class:"text-8",onClick:f}),{default:u(()=>[v(t.$slots,"default"),x("span",le,_(e.text),1)]),_:3},16,["text","loading"])]),default:u(()=>[v(t.$slots,"tooltip")]),_:3})):(h(),P(c,k({key:2,text:!e.text,loading:C(o)},t.$attrs,{onClick:f}),{icon:u(()=>[v(t.$slots,"default")]),default:u(()=>[x("span",null,_(e.text),1)]),_:3},16,["text","loading"]))}}});export{ue as _,pe as a,ae as b,oe as s};
