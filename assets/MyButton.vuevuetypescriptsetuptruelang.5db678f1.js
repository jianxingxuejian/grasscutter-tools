import{c as U,d as T,e as I,j as V,g,i as K,A as w,be as S,h as r,aS as q,q as D,bu as b,m as L,bv as W,a as $,v as m,t as j,u as M,r as A,p as G,s as H,Z as J,bw as Z,B,bx as Q,C as h,M as P,J as f,I as z,aR as k,K as C,by as v,E as x,bg as _,bz as X}from"./index.a2645081.js";import{h as R,b as Y,p as ee,_ as te}from"./Tooltip.84fa9209.js";const y=new Map,N=2e3;function pe(e,o){var t;y.has(e)||(y.set(e,o),(t=window.$message)==null||t.error(o,{duration:N}),setTimeout(()=>{y.delete(e)},N))}function oe(e,o){var t,i;if(!!e)if(typeof e=="object"){const{code:c,msg:l}=e;c===200&&((t=window.$message)==null||t.success(l))}else e===200&&o&&((i=window.$message)==null||i.success(o))}const E=U("n-popconfirm"),F={positiveText:String,negativeText:String,showIcon:{type:Boolean,default:!0},onPositiveClick:{type:Function,required:!0},onNegativeClick:{type:Function,required:!0}},O=D(F),ne=T({name:"NPopconfirmPanel",props:F,setup(e){const{localeRef:o}=R("Popconfirm"),{inlineThemeDisabled:t}=I(),{mergedClsPrefixRef:i,mergedThemeRef:c,props:l}=V(E),a=g(()=>{const{common:{cubicBezierEaseInOut:s},self:{fontSize:p,iconSize:d,iconColor:u}}=c.value;return{"--n-bezier":s,"--n-font-size":p,"--n-icon-size":d,"--n-icon-color":u}}),n=t?K("popconfirm-panel",void 0,a,l):void 0;return Object.assign(Object.assign({},R("Popconfirm")),{mergedClsPrefix:i,cssVars:t?void 0:a,localizedPositiveText:g(()=>e.positiveText||o.value.positiveText),localizedNegativeText:g(()=>e.negativeText||o.value.negativeText),positiveButtonProps:w(l,"positiveButtonProps"),negativeButtonProps:w(l,"negativeButtonProps"),handlePositiveClick(s){e.onPositiveClick(s)},handleNegativeClick(s){e.onNegativeClick(s)},themeClass:n==null?void 0:n.themeClass,onRender:n==null?void 0:n.onRender})},render(){var e;const{mergedClsPrefix:o,showIcon:t,$slots:i}=this,c=S(i.action,()=>this.negativeText===null&&this.positiveText===null?[]:[this.negativeText!==null&&r(b,Object.assign({size:"small",onClick:this.handleNegativeClick},this.negativeButtonProps),{default:()=>this.localizedNegativeText}),this.positiveText!==null&&r(b,Object.assign({size:"small",type:"primary",onClick:this.handlePositiveClick},this.positiveButtonProps),{default:()=>this.localizedPositiveText})]);return(e=this.onRender)===null||e===void 0||e.call(this),r("div",{class:[`${o}-popconfirm__panel`,this.themeClass],style:this.cssVars},q(i.default,l=>t||l?r("div",{class:`${o}-popconfirm__body`},t?r("div",{class:`${o}-popconfirm__icon`},S(i.icon,()=>[r(L,{clsPrefix:o},{default:()=>r(W,null)})])):null,l):null),c?r("div",{class:[`${o}-popconfirm__action`]},c):null)}}),se=$("popconfirm",[m("body",`
 font-size: var(--n-font-size);
 display: flex;
 align-items: center;
 flex-wrap: nowrap;
 position: relative;
 `,[m("icon",`
 display: flex;
 font-size: var(--n-icon-size);
 color: var(--n-icon-color);
 transition: color .3s var(--n-bezier);
 margin: 0 8px 0 0;
 `)]),m("action",`
 display: flex;
 justify-content: flex-end;
 `,[j("&:not(:first-child)","margin-top: 8px"),$("button",[j("&:not(:last-child)","margin-right: 8px;")])])]),ie=Object.assign(Object.assign(Object.assign({},M.props),ee),{positiveText:String,negativeText:String,showIcon:{type:Boolean,default:!0},trigger:{type:String,default:"click"},positiveButtonProps:Object,negativeButtonProps:Object,onPositiveClick:Function,onNegativeClick:Function}),ae=T({name:"Popconfirm",props:ie,__popover__:!0,setup(e){const{mergedClsPrefixRef:o}=I(),t=M("Popconfirm","-popconfirm",se,Z,e,o),i=A(null);function c(n){const{onPositiveClick:s,"onUpdate:show":p}=e;Promise.resolve(s?s(n):!0).then(d=>{var u;d!==!1&&((u=i.value)===null||u===void 0||u.setShow(!1),p&&B(p,!1))})}function l(n){const{onNegativeClick:s,"onUpdate:show":p}=e;Promise.resolve(s?s(n):!0).then(d=>{var u;d!==!1&&((u=i.value)===null||u===void 0||u.setShow(!1),p&&B(p,!1))})}return G(E,{mergedThemeRef:t,mergedClsPrefixRef:o,props:e}),Object.assign(Object.assign({},{setShow(n){var s;(s=i.value)===null||s===void 0||s.setShow(n)},syncPosition(){var n;(n=i.value)===null||n===void 0||n.syncPosition()}}),{mergedTheme:t,popoverInstRef:i,handlePositiveClick:c,handleNegativeClick:l})},render(){const{$slots:e,$props:o,mergedTheme:t}=this;return r(Y,J(o,O,{theme:t.peers.Popover,themeOverrides:t.peerOverrides.Popover,internalExtraClass:["popconfirm"],ref:"popoverInstRef"}),{trigger:e.activator||e.trigger,default:()=>{const i=H(o,O);return r(ne,Object.assign(Object.assign({},i),{onPositiveClick:this.handlePositiveClick,onNegativeClick:this.handleNegativeClick}),e)}})}}),le={class:"text-4"},ue=T({__name:"MyButton",props:{text:null,onClickAsync:null,onClick:null},setup(e){const o=e;let t;Q().default&&(t=A(!1));async function i(){if(!o.onClickAsync)return;let a;t&&(a=setTimeout(()=>{t.value=!0},20));try{const n=await o.onClickAsync();oe(n)}catch{}finally{t&&(t.value?t.value=!1:clearTimeout(a))}}const c=X(i,1e3);async function l(){o.onClick&&o.onClick(),c()}return(a,n)=>{const s=b,p=ae,d=te;return a.$slots.popconfirm?(h(),P(p,{key:0,"show-icon":!1,onPositiveClick:l},{trigger:f(()=>[z(s,k({text:!e.text,loading:C(t)},a.$attrs),{icon:f(()=>[v(a.$slots,"default")]),default:f(()=>[x("span",null,_(e.text),1)]),_:3},16,["text","loading"])]),default:f(()=>[v(a.$slots,"popconfirm")]),_:3})):a.$slots.tooltip?(h(),P(d,{key:1},{trigger:f(()=>[z(s,k({text:!e.text,loading:C(t)},a.$attrs,{class:"text-8",onClick:l}),{default:f(()=>[v(a.$slots,"default"),x("span",le,_(e.text),1)]),_:3},16,["text","loading"])]),default:f(()=>[v(a.$slots,"tooltip")]),_:3})):(h(),P(s,k({key:2,text:!e.text,loading:C(t)},a.$attrs,{onClick:l}),{icon:f(()=>[v(a.$slots,"default")]),default:f(()=>[x("span",null,_(e.text),1)]),_:3},16,["text","loading"]))}}});export{ue as _,pe as a,ae as b,oe as s};
